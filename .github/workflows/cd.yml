name: Java CD with Gradle
# develop에 push 되면 cicd 실행
on:
  push:
    branches: [ "dev" ]

env: 
  S3_BUCKET_NAME: don-t-forget-server
  PROJECT_NAME: Don-t-Forget---Server
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
  S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
  CODEDEPLOY_APPLCIATION_NAME : ${{ secrets.CODEDEPLOY_APPLCIATION_NAME}}
  CODEDEPLOY_DEPLOY_GROUP : ${{secrets.CODEDEPLOY_DEPLOY_GROUP}}
  NOTICE: ${{secrets.NOTICE}}
  APPLICATIONYML : ${{ secrets.APPLICATIONYML }}
permissions:
  contents: read

jobs:
  # 자바 설치
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      # 2. gradle 캐쉬
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: make noticeServiceKey.json
        run: |
            cd ./src/main/resources
            echo "${{ secrets.NOTICE }}" >> ./noticeServiceKey.json
            echo "${{ secrets.APPLICATIONYML }}" > ./application.yml
        shell: bash

      # 3. Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      # make zip file
      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      # aws s3에 파일 옮기기
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
          aws-region: ap-northeast-2
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # 빌드 완료 시간 출력하기
        shell: bash

      # codeDeploy 실행
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODEDEPLOY_APPLCIATION_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce 
          --deployment-group-name $CODEDEPLOY_DEPLOY_GROUP 
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
